var x: int;
var y: ^char;

fun main(a: int, b: int, c: char): void = {
    (x(5) where
        fun x(b: int): void = {
            none;
        };
        var keks: char;);

    (x(5) where
        fun x(b: int): void = {
            none;
        };
        var keks: char;);

};

typ tip = int;

#{Should output: (locations might vary)
  AstVarDecl(x) @(1.1-1.3)
      AbsAccess(8,_x)
    AstAtomType(INT) @(1.8-1.10)
      describesType:
        Int
  AstVarDecl(y) @(2.1-2.3)
      AbsAccess(8,_y)
    AstPtrType @(2.8-2.8)
      describesType:
        Ptr
          Char
      AstAtomType(CHAR) @(2.9-2.12)
        describesType:
          Char
  AstFunDecl(main) @(4.1-4.3)
      Frame(_main,48=16+16+16,T4,T5,1)
    {Pars}
      AstParDecl(a) @(4.10-4.10)
          RelAccess(8,8,2)
        AstAtomType(INT) @(4.13-4.15)
          describesType:
            Int
      AstParDecl(b) @(4.16-4.16)
          RelAccess(8,16,2)
        AstAtomType(INT) @(4.21-4.23)
          describesType:
            Int
      AstParDecl(c) @(4.24-4.24)
          RelAccess(8,24,2)
        AstAtomType(CHAR) @(4.29-4.32)
          describesType:
            Char
    AstAtomType(VOID) @(4.36-4.39)
      describesType:
        Void
    AstStmtExpr @(4.43-4.43)
      exprOfType:
        Void
      {Stmts}
          AstExprStmt @(5.11-5.15)
            stmtOfType:
              Void
            AstWhereExpr @(5.11-5.15)
              exprOfType:
                Void
              {Decls}
                  AstFunDecl(x) @(6.9-6.11)
                      Frame(L0,16=16+0+0,T0,T1,2)
                    {Pars}
                      AstParDecl(b) @(6.15-6.15)
                          RelAccess(8,8,3)
                        AstAtomType(INT) @(6.18-6.20)
                          describesType:
                            Int
                    AstAtomType(VOID) @(6.24-6.27)
                      describesType:
                        Void
                    AstStmtExpr @(6.31-6.31)
                      exprOfType:
                        Void
                      {Stmts}
                          AstExprStmt @(7.13-7.16)
                            stmtOfType:
                              Void
                            AstConstExpr(VOID,none) @(7.13-7.16)
                              exprOfType:
                                Void
                  AstVarDecl(keks) @(9.9-9.11)
                      RelAccess(8,-8,2)
                    AstAtomType(CHAR) @(9.19-9.22)
                      describesType:
                        Char
              AstCallExpr(x) @(5.6-5.6)
                declaredAt: 6.9-6.11
                exprOfType:
                  Void
                {Args}
                  AstConstExpr(INT,5) @(5.8-5.8)
                    exprOfType:
                      Int
          AstExprStmt @(11.11-11.15)
            stmtOfType:
              Void
            AstWhereExpr @(11.11-11.15)
              exprOfType:
                Void
              {Decls}
                  AstFunDecl(x) @(12.9-12.11)
                      Frame(L1,16=16+0+0,T2,T3,2)
                    {Pars}
                      AstParDecl(b) @(12.15-12.15)
                          RelAccess(8,8,3)
                        AstAtomType(INT) @(12.18-12.20)
                          describesType:
                            Int
                    AstAtomType(VOID) @(12.24-12.27)
                      describesType:
                        Void
                    AstStmtExpr @(12.31-12.31)
                      exprOfType:
                        Void
                      {Stmts}
                          AstExprStmt @(13.13-13.16)
                            stmtOfType:
                              Void
                            AstConstExpr(VOID,none) @(13.13-13.16)
                              exprOfType:
                                Void
                  AstVarDecl(keks) @(15.9-15.11)
                      RelAccess(8,-16,2)
                    AstAtomType(CHAR) @(15.19-15.22)
                      describesType:
                        Char
              AstCallExpr(x) @(11.6-11.6)
                declaredAt: 12.9-12.11
                exprOfType:
                  Void
                {Args}
                  AstConstExpr(INT,5) @(11.8-11.8)
                    exprOfType:
                      Int
  AstTypDecl(tip) @(19.1-19.3)
    declaresType:
      Name(tip)
      Int
    AstAtomType(INT) @(19.11-19.13)
      describesType:
        Int
}#